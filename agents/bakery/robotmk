#!/usr/bin/env python
# -*- encoding: utf-8; py-indent-offset: 4 -*-

import cmk.utils.paths
import logging
import yaml

def bake_robotmk(opsys, conf, conf_dir, plugins_dir, agconf):
    target_dir = plugins_dir

    # Deploy the agent plugin
    if opsys == "linux":
        shutil.copy2(cmk.utils.paths.local_agents_dir + "/plugins/robotmk", target_dir + "/robotmk")
    else:
        shutil.copy2(cmk.utils.paths.local_agents_dir + "/windows/plugins/robotmk",
                     target_dir + "/robotmk")

    # Create the agent configuration
    content = agent_file_header

    #example taken from bakery on how to address data from the conf.
    #for this please see the logger in your log file

    if opsys == "linux":
        cfg_file = conf_dir + "/robotmk.yml"
        #local_cfg_file = "%s/robotmk.local.cfg" % agconf["agent_paths"]["config"]
    else:
        cfg_file = conf_dir + "/robotmk.yml"
        #local_cfg_file = "%s/robotmk.local.ini" % agconf["agent_paths"]["config"]

    robot_test_suites = conf.get('suites')
    # the rest is the global part
    robot_global_conf = conf

    robot_global_conf.setdefault('log', '')
    robot_global_conf.setdefault('console', '')
    robot_global_conf.setdefault('report', '')
    if opsys == "windows":
        robot_global_conf.setdefault('outputdir', "FIXME")
        robot_global_conf.setdefault('robotdir', "FIXME")
    elif opsys == "linux":
        robot_global_conf.setdefault('outputdir', "/tmp/robotmk")
        robot_global_conf.setdefault('robotdir', "/usr/lib/check_mk_agent/robot")

    robot_test_suites_list = { 'suites' : dict( (x,y) for x,y in (robot_test_suites)) }
    robot_global_conf.update(robot_test_suites_list)
    #i'd rather have this here, it will get overlooked if put in above block, will not work since conf is NOT string anymore
    # if opsys == "windows":
    #     robot_global_conf = robot_global_conf.replace('\n', '\r\n')
    
    #safer to use "safe_dump apparently"
    with open(cfg_file,"w") as output_file:
        yaml.safe_dump(robot_global_conf,output_file, encoding='utf-8', allow_unicode=True)
        yaml.safe_dump(robot_test_suites_list,output_file,encoding='utf-8', allow_unicode=True)

    logger.debug("goodbye")

bakery_info["robotmk"] = {
    "bake_function": bake_robotmk,
    "os": ["linux", "windows"],
}