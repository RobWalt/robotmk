#!/usr/bin/env python
# -*- encoding: utf-8; py-indent-offset: 4 -*-

# (c) 2020 Simon Meggle <simon.meggle@elabit.de>

# This file is part of RobotMK
# https://robotmk.org
# https://github.com/simonmeggle/robotmk

# RobotMK is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 3.  This file is distributed
# in the hope that it will be useful, but WITHOUT ANY WARRANTY;  with-
# out even the implied warranty of  MERCHANTABILITY  or  FITNESS FOR A
# PARTICULAR PURPOSE. See the  GNU General Public License for more de-
# ails.  You should have  received  a copy of the  GNU  General Public
# License along with GNU Make; see the file  COPYING.  If  not,  write
# to the Free Software Foundation, Inc., 51 Franklin St,  Fifth Floor,
# Boston, MA 02110-1301 USA.

import cmk.utils.paths
import logging
import yaml
from cmk.utils.exceptions import MKGeneralException

def bake_robotmk(opsys, conf, conf_dir, plugins_dir):
    robot_global_conf = conf.copy()
    robot_test_suites = robot_global_conf.pop('suites')
    
    robot_global_conf.setdefault('log', '')
    robot_global_conf.setdefault('console', '')
    robot_global_conf.setdefault('report', '')
    robot_global_conf.setdefault('cache_time', 900)
    cfg_file = conf_dir + "/robotmk.yml"
    if opsys == "windows":
        # TODO: Path validation
        os_newline = "\r\n"
        os_pluginname = "robotmk.py"
        robot_global_conf.setdefault('robotdir', 'C:\ProgramData\checkmk\agent\robot')
        with Path(conf_dir, "check_mk.ini.plugins.zzz_%s" % os_pluginname).open("w") as out:
            out.write(u"    execution %s = async\r\n" % os_pluginname)
            out.write(u"    cache_age %s = %d\r\n" % (os_pluginname, robot_global_conf['cache_time']))
            # Kill the plugin before the next async execution will start
            out.write(u"    timeout %s = %d\r\n" % (os_pluginname, robot_global_conf['cache_time'] - 60))
            out.write(u"\r\n")
    elif opsys == "linux":
        # TODO: Path validation
        os_newline = "\n"
        os_pluginname = "robotmk"
        robot_global_conf.setdefault('robotdir', "/usr/lib/check_mk_agent/robot")
        plugins_dir = Path(plugins_dir, "%s" % robot_global_conf['cache_time'])
        plugins_dir.mkdir(parents=True, exist_ok=True)
    else: 
        raise MKGeneralException("Error in bakery plugin \"%s\": %s\n" %
                                 ("robotmk", "RobotMK is supported on Windows and Linux only"))
    
    shutil.copy2(cmk.utils.paths.local_agents_dir + '/plugins/robotmk', str(plugins_dir) + '/' + os_pluginname)
    
    # transform suites dict
    robot_test_suites_dict = { 'suites' : dict( (x,y) for x,y in (robot_test_suites)) }

    with open(cfg_file,"w") as output_file:
        output_file.write(agent_file_header)
        yaml.safe_dump(robot_global_conf, output_file, line_break=os_newline, encoding='utf-8', allow_unicode=True)
        yaml.safe_dump(robot_test_suites_dict, output_file, line_break=os_newline, encoding='utf-8', allow_unicode=True)

bakery_info["robotmk"] = {
    "bake_function": bake_robotmk,
    "os": ["linux", "windows"],
}