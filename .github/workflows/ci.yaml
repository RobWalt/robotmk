name: CI

on: [push, pull_request]

jobs:
  testing:
    runs-on: ubuntu-22.04
    # strategy:
    #   matrix:
    #     include:
    #     - name: Bandit tests
    #       target: test-bandit
    #     - name: Python formatting
    #       target: test-format-python
    #     - name: Pylint tests
    #       target: test-pylint
    #     - name: Python unit tests
    #       target: test-unit
    #     - name: mypy tests
    #       target: test-mypy-raw
    steps:
    - name: Set pip and pipenv cache variables
      run: |
        # Using existing environment variables is not working in the jobs.*.env section
        # https://brandur.org/fragments/github-actions-env-vars-in-env-vars
        echo "PIP_CACHE_DIR=$HOME/.cache/pip" >> $GITHUB_ENV
        echo "PIPENV_CACHE_DIR=$HOME/.cache/pipenv" >> $GITHUB_ENV
    - name: Checkout repository
      uses: actions/checkout@v3
      with:
        submodules: true
    - name: Parse Python version from Pipfile
      run: grep "python_full_version =" Pipfile | grep -oP "[0-9]+\.[0-9]+\.[0-9]+" >> $GITHUB_ENV
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}
    - name: Cache pip
      uses: actions/cache@v3
      with:
        key: pip-${{ runner.os }}-${{ hashFiles('Pipfile.lock') }}
        path: ${{ env.PIP_CACHE_DIR  }}
    - name: Cache pipenv
      uses: actions/cache@v3
      with:
        key: pipenv-${{ runner.os }}-${{ hashFiles('Pipfile.lock') }}
        path: ${{ env.PIPENV_CACHE_DIR  }}
    - name: Setup Environment
      run: |
        # librrd-dev: Needed for building rrdtool python bindings.
        # libldap2-dev: Needed for building python-ldap.
        # libsasl2-dev: Needed for building python-ldap.
        # libkrb5-dev: Needed for building pykerberos.
        sudo apt-get update
        sudo apt-get install librrd-dev libldap2-dev libsasl2-dev libkrb5-dev
        pip3 install pipenv
        make .venv
    # - name: Run ${{ matrix.name  }}
    #   env:
    #     TEST_TARGETS: ${{ matrix.target }}
    #   run: |
    #     make -C tests $TEST_TARGETS
